
SRC_ROOT := $(PWD)/../../..

CONFIG_USED = $(SRC_ROOT)/sample/config/include
EXTRA_CFLAGS += -I$(KERNELDIR)/include -Wno-format -DICC_GCC_ARM -fshort-enums -DICC_MIX_32_64_SUPPORT -DICC_LINUX2LINUX -DICC_DO_NOT_USE_INTERRUPTS #-DICC_TST_HWSYNCH

INCLUDE_DEPENDENCIES := -I$(SRC_ROOT)/code/linux/inc \
                        -I$(SRC_ROOT)/code/linux/os \
                        -I$(SRC_ROOT)/code/linux/os/Linux \
                        -I$(SRC_ROOT)/code/linux/hw \
                        -I$(CONFIG_USED)\
                        -I$(PWD)\
                        -I$(PWD)/../ICC_module_common \
                        -I$(PWD)/../ICC_Sample_module_common

ifneq ($(CC),$(LD))
	# bitbake calls $(CROSS_COMPILE)LD for linking instead of $(CROSS_COMPILE)GCC
	# and we need to update LDFLAGS for this case
	LDFLAGS := -O1 --hash-style=gnu --as-needed
endif

## Objects to build ##
obj-m := ICC_Sample.o
ccflags-y += $(INCLUDE_DEPENDENCIES)

ICC_Sample-objs := ../ICC_Sample_module_common/ICC_Sample_dev.o
ICC_Sample-objs += ../ICC_Sample_module_common/ICC_Linux_Sample.o
ICC_Sample-objs += ./../../config/src/ICC_Config.o
